//это нейкий объект присутствующий у объектов и вызываемый по цепочке с верху в низ.прототипирование помогает устроить наследование объектов как в примере ниже
//Существует глобальный класс Object который яв прототипом всех послед создаваемых объектов и если мы попробуем на его основе создать свой объект исп new мы сможем увидеть что в нашем person унаследованы все поля прототипа а именно Object и конечно присут созданные.
const person = new Object({
  name: 'Andre',
  age: 33,
  greet: function () {
    console.log('Greet');
  },
});
//мы можем добавить свои поля в глобалл объект Object например функцию sayHello которая при обращ к ней будет возвращ в консоль Hello!
Object.prototype.sayHello = function () {
  console.log('Hello!');
};
//теперь создав на основе person переменную lena мы наследуем от person созданного нами и от глобал Object все поля и можем вызывать их. так же можем добавлять свои значения в созданный lena
const lena = Object.create(person);
lena.name = 'Elena';
// те прототипирование позволяет обращаться к текущему объекту с поиском нужного нам, если не находим js идет дальше к прототипу этого объекта и ищет в нем (например если обратиться к lena.sayHello() мы получим Hello! тк снач будем искать в lena потом пойдем выше в person и дойдем до Object где мы и создали/добавили функцию sayHello см пример выше)
